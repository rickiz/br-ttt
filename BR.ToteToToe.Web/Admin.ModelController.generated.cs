// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace BR.ToteToToe.Web.Areas.Admin.Controllers
{
    public partial class ModelController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ModelController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ModelController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Edit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Size()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Size);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UploadImage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadImage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetColourDescByColour()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetColourDescByColour);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetBrandByCategory()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetBrandByCategory);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ModelController Actions { get { return MVC.Admin.Model; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Admin";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Model";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Model";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Create = "Create";
            public readonly string Edit = "Edit";
            public readonly string Size = "Size";
            public readonly string UploadImage = "UploadImage";
            public readonly string GetColourDescByColour = "GetColourDescByColour";
            public readonly string GetBrandByCategory = "GetBrandByCategory";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Create = "Create";
            public const string Edit = "Edit";
            public const string Size = "Size";
            public const string UploadImage = "UploadImage";
            public const string GetColourDescByColour = "GetColourDescByColour";
            public const string GetBrandByCategory = "GetBrandByCategory";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_Create s_params_Create = new ActionParamsClass_Create();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Create CreateParams { get { return s_params_Create; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Create
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_Edit s_params_Edit = new ActionParamsClass_Edit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Edit EditParams { get { return s_params_Edit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Edit
        {
            public readonly string id = "id";
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_Size s_params_Size = new ActionParamsClass_Size();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Size SizeParams { get { return s_params_Size; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Size
        {
            public readonly string modelID = "modelID";
            public readonly string colourDescID = "colourDescID";
            public readonly string viewModel = "viewModel";
            public readonly string collection = "collection";
        }
        static readonly ActionParamsClass_UploadImage s_params_UploadImage = new ActionParamsClass_UploadImage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UploadImage UploadImageParams { get { return s_params_UploadImage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UploadImage
        {
            public readonly string modelID = "modelID";
            public readonly string colourDescID = "colourDescID";
            public readonly string categoryID = "categoryID";
            public readonly string viewModel = "viewModel";
            public readonly string fileMain = "fileMain";
            public readonly string fileSub = "fileSub";
            public readonly string fileThumbnail1 = "fileThumbnail1";
            public readonly string fileThumbnail2 = "fileThumbnail2";
            public readonly string fileThumbnail3 = "fileThumbnail3";
            public readonly string fileThumbnail4 = "fileThumbnail4";
            public readonly string fileImage1 = "fileImage1";
            public readonly string fileImage2 = "fileImage2";
            public readonly string fileImage3 = "fileImage3";
            public readonly string fileImage4 = "fileImage4";
        }
        static readonly ActionParamsClass_GetColourDescByColour s_params_GetColourDescByColour = new ActionParamsClass_GetColourDescByColour();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetColourDescByColour GetColourDescByColourParams { get { return s_params_GetColourDescByColour; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetColourDescByColour
        {
            public readonly string colourID = "colourID";
            public readonly string colourDescID = "colourDescID";
        }
        static readonly ActionParamsClass_GetBrandByCategory s_params_GetBrandByCategory = new ActionParamsClass_GetBrandByCategory();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetBrandByCategory GetBrandByCategoryParams { get { return s_params_GetBrandByCategory; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetBrandByCategory
        {
            public readonly string categoryID = "categoryID";
            public readonly string brandName = "brandName";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Create = "Create";
                public readonly string Edit = "Edit";
                public readonly string Index = "Index";
                public readonly string Size = "Size";
                public readonly string UploadImage = "UploadImage";
            }
            public readonly string Create = "~/Areas/Admin/Views/Model/Create.cshtml";
            public readonly string Edit = "~/Areas/Admin/Views/Model/Edit.cshtml";
            public readonly string Index = "~/Areas/Admin/Views/Model/Index.cshtml";
            public readonly string Size = "~/Areas/Admin/Views/Model/Size.cshtml";
            public readonly string UploadImage = "~/Areas/Admin/Views/Model/UploadImage.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ModelController : BR.ToteToToe.Web.Areas.Admin.Controllers.ModelController
    {
        public T4MVC_ModelController() : base(Dummy.Instance) { }

        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, BR.ToteToToe.Web.Areas.Admin.ViewModels.ModelViewModel viewModel);

        public override System.Web.Mvc.ActionResult Index(BR.ToteToToe.Web.Areas.Admin.ViewModels.ModelViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            IndexOverride(callInfo, viewModel);
            return callInfo;
        }

        partial void CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult Create()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
            CreateOverride(callInfo);
            return callInfo;
        }

        partial void CreateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, BR.ToteToToe.Web.Areas.Admin.ViewModels.MaintainModelViewModel viewModel);

        public override System.Web.Mvc.ActionResult Create(BR.ToteToToe.Web.Areas.Admin.ViewModels.MaintainModelViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Create);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            CreateOverride(callInfo, viewModel);
            return callInfo;
        }

        partial void EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        public override System.Web.Mvc.ActionResult Edit(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            EditOverride(callInfo, id);
            return callInfo;
        }

        partial void EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, BR.ToteToToe.Web.Areas.Admin.ViewModels.MaintainModelViewModel viewModel);

        public override System.Web.Mvc.ActionResult Edit(BR.ToteToToe.Web.Areas.Admin.ViewModels.MaintainModelViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            EditOverride(callInfo, viewModel);
            return callInfo;
        }

        partial void SizeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int modelID, int colourDescID);

        public override System.Web.Mvc.ActionResult Size(int modelID, int colourDescID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Size);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "modelID", modelID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "colourDescID", colourDescID);
            SizeOverride(callInfo, modelID, colourDescID);
            return callInfo;
        }

        partial void SizeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, BR.ToteToToe.Web.Areas.Admin.ViewModels.ModelSizeViewModel viewModel, System.Web.Mvc.FormCollection collection);

        public override System.Web.Mvc.ActionResult Size(BR.ToteToToe.Web.Areas.Admin.ViewModels.ModelSizeViewModel viewModel, System.Web.Mvc.FormCollection collection)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Size);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "collection", collection);
            SizeOverride(callInfo, viewModel, collection);
            return callInfo;
        }

        partial void UploadImageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int modelID, int colourDescID, int categoryID);

        public override System.Web.Mvc.ActionResult UploadImage(int modelID, int colourDescID, int categoryID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadImage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "modelID", modelID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "colourDescID", colourDescID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryID", categoryID);
            UploadImageOverride(callInfo, modelID, colourDescID, categoryID);
            return callInfo;
        }

        partial void UploadImageOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, BR.ToteToToe.Web.Areas.Admin.ViewModels.ModelImageViewModel viewModel, System.Web.HttpPostedFileBase fileMain, System.Web.HttpPostedFileBase fileSub, System.Web.HttpPostedFileBase fileThumbnail1, System.Web.HttpPostedFileBase fileThumbnail2, System.Web.HttpPostedFileBase fileThumbnail3, System.Web.HttpPostedFileBase fileThumbnail4, System.Web.HttpPostedFileBase fileImage1, System.Web.HttpPostedFileBase fileImage2, System.Web.HttpPostedFileBase fileImage3, System.Web.HttpPostedFileBase fileImage4);

        public override System.Web.Mvc.ActionResult UploadImage(BR.ToteToToe.Web.Areas.Admin.ViewModels.ModelImageViewModel viewModel, System.Web.HttpPostedFileBase fileMain, System.Web.HttpPostedFileBase fileSub, System.Web.HttpPostedFileBase fileThumbnail1, System.Web.HttpPostedFileBase fileThumbnail2, System.Web.HttpPostedFileBase fileThumbnail3, System.Web.HttpPostedFileBase fileThumbnail4, System.Web.HttpPostedFileBase fileImage1, System.Web.HttpPostedFileBase fileImage2, System.Web.HttpPostedFileBase fileImage3, System.Web.HttpPostedFileBase fileImage4)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadImage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileMain", fileMain);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileSub", fileSub);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileThumbnail1", fileThumbnail1);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileThumbnail2", fileThumbnail2);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileThumbnail3", fileThumbnail3);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileThumbnail4", fileThumbnail4);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileImage1", fileImage1);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileImage2", fileImage2);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileImage3", fileImage3);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileImage4", fileImage4);
            UploadImageOverride(callInfo, viewModel, fileMain, fileSub, fileThumbnail1, fileThumbnail2, fileThumbnail3, fileThumbnail4, fileImage1, fileImage2, fileImage3, fileImage4);
            return callInfo;
        }

        partial void GetColourDescByColourOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int colourID, int colourDescID);

        public override System.Web.Mvc.ActionResult GetColourDescByColour(int colourID, int colourDescID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetColourDescByColour);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "colourID", colourID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "colourDescID", colourDescID);
            GetColourDescByColourOverride(callInfo, colourID, colourDescID);
            return callInfo;
        }

        partial void GetBrandByCategoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int categoryID, string brandName);

        public override System.Web.Mvc.ActionResult GetBrandByCategory(int categoryID, string brandName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetBrandByCategory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryID", categoryID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "brandName", brandName);
            GetBrandByCategoryOverride(callInfo, categoryID, brandName);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
